= Lola Specification

Lola is the "*Lo*cal-*La*nguage Environment Manager". This is a working
specification and design document.

= Goals

* Lola is essentially rbenv/perlbrew for all programming languages.
* Lola also deals with packages (modules/libraries) in a like manner.
  * Lola calls the best existing tools in each language for this.
* Lola (the core) is written entirely in Bash.
  * It /can/ invoke components written in other languages.
* Lola supports a *shim* architecture.
  * Every binary has a shim script that proxies to a real binary.
  * Useful for assigning a Lola setup to a directory.
* Lola also supports an environment variable based architecture.
  * Useful for assigning a Lola setup to a shell.
* Lola environments are based on:
  * Shell specific settings
  * Cwd settings
  * Global settings
* Lola can build language runtimes and packages from source.
  * Binary installs will be supported as possible.
* Ease exposure to new languages by having a clean abstraction of language and
  package installation.

Some more thoughts on these goals.

`plenv` (and its shim style) has proven to be more reliable than `perlbrew`.
`plenv` is a direct copy of `rbenv` and that has shown to be usable in many
languages. Lola takes this to a natural conclusion of one tool for managing
locally installed languages in a consistent manner.

People use separate tools for managing packages. Perlbrew + locallib, NVM +
NPM, etc. The management of both share the same concerns. Combining them can
multiply the power of a such a tool. For instance:

  lola run p5=5.18.1 pkg=dzil make test

Lola stores settings in 3 places: environment variables, `.lola` directories,
and the $LOLA_ROOT directory. Shims look in those places in that order. The
`.lola` directory search starts with $PWD and works towards `/`. Things in
`LOLA_ROOT` are considered *global* settings.

Packages get installed under LOLA_ROOT into named /pkg-sets/ and the current
pkg-set for a language is set in the same ways as the current language
runtime.

= Project Bootstrapping

Interested people should convene in IRC on irc.freenode.net#locallang.

Existing projects to look at and borrow ideas from are:

* https://github.com/sstephenson/rbenv
* https://github.com/tokuhirom/plenv
* https://github.com/ingydotnet/git-hub

We should pick a language to start with, based on the people involved and
their expertise. Perl and/or Ruby seem like decent candidates. We should
probably co-opt the language installer components outright, as these might be
the more difficult parts. Also the package installers like `cpanm` should
probably always be wrapped, as they are highly language specific. We just want
to introduce the concept of swappable pkg-sets.

= Commands

I'll start by making a list of commands that should be available. Probably best
to write them out in a long-hand syntax, then work in a nice alias syntax
later.

- `lola use --lang=perl5 [--shell | --target=<dir> | --global] <version>`

  This is maybe the most common command. It switches the current language
  version/binary that is in use. There are different contexts for this:

  * The current shell. The `--shell` option should probably be the default.
    This approach just changes environment variables. This means that only the
    `PATH` and `PERL5LIB` environment variables would be updated.

  * A target directory. This would create a file called `.lola/perl5` under the
    target directory, and then all the commands run under the directory would
    use that Perl. This relies on binary /shims/ rather than environment. The
    shims themselves live in the `LOLA_ROOT` directory. The shims are the same
    for all versions of a program. They merely look for `.lola/perl5` files to
    DTRT.

  * A global default. Shims that find no `.lola/perl5` file can look at
    `$LOLA_ROOT/lola/perl5`.

  Examples:

    lola use --lang=perl5 --target=~/src 5.18.1
    lola p5=5.18.1 ~/src    # Same as above

    lola use --lang=perl5 --shell 5.14.2
    lola p5=5.14.2
    lola p5=14.2        # Maximum sugar

    lola use --lang=perl5 --global 5.20.0
    lola use -g p5=5.20.0

- `lola show [--lang=p5 | --all] [--shell | --target=<dir> | --global]`

  Show info about the version and the pkgset currently in effect, for a
  language (or all languages) or for a target directory.

= Environment Variables

- `LOLA_BASE`

  This is where the Lola software repository lives. `$LOLA_BASE/bin` is added
  to the `PATH` and `lola-init` is sourced into the shell. `LOLA_BASE` is then
  defaulted to the repo directory containing the `lola-init` that was sourced.

  The suggested place to put the Lola software is in `~/.lola` but this is in
  no way special to the software (although it may be the base of paths talked
  about in the docs). In fact you can have several Lola installations... the
  one you source `lola-init` from is the one in charge.

- `LOLA_ROOT`

  This is the directory under which everything is installed.

    $LOLA_ROOT/perl5
    $LOLA_ROOT/ruby

  Default: `$LOLA_BASE/root/`

- `LOLA_SHIM`

  Location of the proxy shims for all executables installed by all languages.

  Default: `$LOLA_BASE/shim/`

= Glossary

- `lid` :: A language id like `perl5` (canonical) or `p5` (shorthand alias)

